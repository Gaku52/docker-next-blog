{"pageProps":{"post":{"title":"WSL＋Docker環境でコード変更時にHOT Reloadが遅い解決法","date":"2022-11-02T23:00","slug":"article-00003-Ubuntu","content":"<h2 id=\"wsl2でnextjsアプリの変更時にhot-reloadが遅いとき\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#wsl2でnextjsアプリの変更時にhot-reloadが遅いとき\"><span class=\"icon icon-link\"></span></a>WSL2でNext.jsアプリの変更時にHOT Reloadが遅いとき</h2>\n<p>WSL2 ＋ Docker の実行環境で Next.js プロジェクトを実行環境としたとき、変更時にリアルタイム更新(HOT Reload)が遅い現象が起こりました。</p>\n<p>実際どれくらい遅いというと、ローカル開発と比べて 3~5 秒遅いと思われます。(体感)</p>\n<p>せっかく Docker の環境で開発したいと思っても、これではローカルの方がいいかな...となってしまいます。</p>\n<p>そこで、今回は状況分析から解決策実施まで行いました。</p>\n<h3 id=\"状況と原因\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#状況と原因\"><span class=\"icon icon-link\"></span></a>状況と原因</h3>\n<p>状況として WLS2 の mnt/c から Windows 上のディレクトリへアクセスしていたのですが、それが原因のようです。</p>\n<p>データ更新の際、毎回 Windows へアクセスしているため時間がかかっているとのこと。</p>\n<h3 id=\"解決方法\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#解決方法\"><span class=\"icon icon-link\"></span></a>解決方法</h3>\n<p>コマンド操作でディレクトリを、WSL2 の home ディレクトリ上へコピーする。<br>\nUbuntu 側で直接 WEB アプリ開発環境を構築することもでき、HOT Reload 速度も向上します。</p>\n<h3 id=\"参考サイト様\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#参考サイト様\"><span class=\"icon icon-link\"></span></a>参考サイト様</h3>\n<p><a href=\"https://blog.kapiecii.com/posts/2022/07/24/docker-and-nextjs/\">解説サイト様 ①「Docker で Next.js の開発環境を作ったがローカルで開発することにした」</a><br>\n<a href=\"https://onl.la/Dwj9qFg\">解説サイト様 ②「(続き)Windows+WSL2 で React の開発環境を作った」</a></p>","ogImage":{"url":"/assets/blog/Ubuntu/Ubuntu.png"},"coverImage":"/assets/blog/Ubuntu/Ubuntu.png","tags":["Ubuntu","Linux","WSL2"]}},"__N_SSG":true}